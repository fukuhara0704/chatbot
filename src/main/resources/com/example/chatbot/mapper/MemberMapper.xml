<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chatbot.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.example.chatbot.model.Member">
    <id column="MAIL_ADDRESS" jdbcType="VARCHAR" property="mailAddress" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="CREATED_USER" jdbcType="VARCHAR" property="createdUser" />
    <result column="UPDATED_DATE" jdbcType="TIMESTAMP" property="updatedDate" />
    <result column="UPDATED_USER" jdbcType="VARCHAR" property="updatedUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MAIL_ADDRESS, NAME, CREATED_DATE, CREATED_USER, UPDATED_DATE, UPDATED_USER
  </sql>
  <select id="selectByExample" parameterType="com.example.chatbot.model.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member
    where MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.chatbot.model.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.chatbot.model.Member">
    insert into member (MAIL_ADDRESS, NAME, CREATED_DATE, 
      CREATED_USER, UPDATED_DATE, UPDATED_USER
      )
    values (#{mailAddress,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=VARCHAR}, #{updatedDate,jdbcType=TIMESTAMP}, #{updatedUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.chatbot.model.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mailAddress != null">
        MAIL_ADDRESS,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="createdDate != null">
        CREATED_DATE,
      </if>
      <if test="createdUser != null">
        CREATED_USER,
      </if>
      <if test="updatedDate != null">
        UPDATED_DATE,
      </if>
      <if test="updatedUser != null">
        UPDATED_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mailAddress != null">
        #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        #{updatedUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.chatbot.model.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="row.mailAddress != null">
        MAIL_ADDRESS = #{row.mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="row.name != null">
        NAME = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.createdDate != null">
        CREATED_DATE = #{row.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdUser != null">
        CREATED_USER = #{row.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="row.updatedDate != null">
        UPDATED_DATE = #{row.updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedUser != null">
        UPDATED_USER = #{row.updatedUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set MAIL_ADDRESS = #{row.mailAddress,jdbcType=VARCHAR},
      NAME = #{row.name,jdbcType=VARCHAR},
      CREATED_DATE = #{row.createdDate,jdbcType=TIMESTAMP},
      CREATED_USER = #{row.createdUser,jdbcType=VARCHAR},
      UPDATED_DATE = #{row.updatedDate,jdbcType=TIMESTAMP},
      UPDATED_USER = #{row.updatedUser,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chatbot.model.Member">
    update member
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null">
        CREATED_USER = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null">
        UPDATED_DATE = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
      </if>
    </set>
    where MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chatbot.model.Member">
    update member
    set NAME = #{name,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      CREATED_USER = #{createdUser,jdbcType=VARCHAR},
      UPDATED_DATE = #{updatedDate,jdbcType=TIMESTAMP},
      UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
    where MAIL_ADDRESS = #{mailAddress,jdbcType=VARCHAR}
  </update>
</mapper>